{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _jsxFileName = \"/home/kshen3778/Desktop/Projects/Fulcrum-Gateway/fulcrum_gateway/src/components/atoms/EnqueueForm.tsx\";\n\nfunction _default(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = _react.default.useState({\n    submitted: false\n  }),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      formData = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState({}),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      errors = _React$useState4[0],\n      setErrors = _React$useState4[1];\n\n  var _useTranslation = (0, _reactI18next.useTranslation)([\"homePage\", \"common\"]),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var validate = function validate() {\n    if (formData.name === undefined) {\n      setErrors((0, _extends2.default)({}, errors, {\n        name: 'ID is required'\n      }));\n      return false;\n    } else if (formData.name.length !== 10) {\n      setErrors((0, _extends2.default)({}, errors, {\n        name: 'ID is too short'\n      }));\n      return false;\n    }\n\n    return true;\n  };\n\n  var onSuccess = function onSuccess() {\n    setData((0, _extends2.default)({}, formData, {\n      submitted: true\n    }));\n    navigation.navigate(\"QueuerDashboard\");\n    setData((0, _extends2.default)({}, formData, {\n      submitted: false\n    }));\n  };\n\n  var onFailure = function onFailure() {\n    setData((0, _extends2.default)({}, formData, {\n      submitted: false\n    }));\n    setErrors((0, _extends2.default)({}, errors, {\n      invalid: \"invalid submission\"\n    }));\n  };\n\n  var onSubmit = function onSubmit() {\n    validate() ? onSuccess() : onFailure();\n  };\n\n  return _react.default.createElement(_nativeBase.VStack, {\n    width: \"90%\",\n    mx: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_nativeBase.FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_nativeBase.Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_nativeBase.FormControl.Label, {\n    _text: {\n      bold: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, t(\"queue_id\"))), _react.default.createElement(_nativeBase.Input, {\n    placeholder: \"Ex. 6477135354\",\n    onChangeText: function onChangeText(value) {\n      return setData((0, _extends2.default)({}, formData, {\n        name: value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_nativeBase.Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_nativeBase.FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, t('helper'))), _react.default.createElement(_nativeBase.FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Error Name\")), _react.default.createElement(_nativeBase.Button, {\n    onPress: onSubmit,\n    mt: \"5\",\n    isLoading: formData.submitted,\n    isLoadingText: \"Submitting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, t('submit', {\n    ns: 'common'\n  })));\n}","map":{"version":3,"sources":["/home/kshen3778/Desktop/Projects/Fulcrum-Gateway/fulcrum_gateway/src/components/atoms/EnqueueForm.tsx"],"names":["navigation","React","useState","submitted","formData","setData","errors","setErrors","t","i18n","validate","name","undefined","length","onSuccess","navigate","onFailure","invalid","onSubmit","bold","value","fontSize","ns"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    VStack,\n    FormControl,\n    Input,\n    Button,\n    Center\n} from \"native-base\";\nimport {HomeScreenProps} from \"../../../types\";\nimport {CommonActions} from \"@react-navigation/native\";\nimport {useTranslation} from \"react-i18next\";\n\n\nexport default function ({navigation}: HomeScreenProps) {\n    const [formData, setData] = React.useState<any>({submitted: false});\n    const [errors, setErrors] = React.useState<object>({});\n    const { t, i18n } = useTranslation([\"homePage\", \"common\"]);\n    const validate = () => {\n        if (formData.name === undefined) {\n            setErrors({\n                ...errors,\n                name: 'ID is required',\n            });\n            return false;\n        } else if (formData.name.length !== 10) {\n            setErrors({\n                ...errors,\n                name: 'ID is too short',\n            });\n            return false;\n        }\n        return true;\n    };\n\n    const onSuccess = () => {\n        setData({...formData, submitted: true})\n        navigation.navigate(\"QueuerDashboard\")\n        setData({...formData, submitted: false})  // In case user goes back to home page (probably wrong :P)\n    }\n\n    const onFailure = () => {\n        setData({...formData, submitted: false})\n        setErrors({...errors, invalid: \"invalid submission\"})\n    }\n\n    const onSubmit = () => {\n        validate() ?  onSuccess() : onFailure();\n    };\n\n    return (\n        <VStack width=\"90%\" mx=\"3\">\n            <FormControl>\n                <Center>\n                    <FormControl.Label _text={{bold: true}}>{t(\"queue_id\")}</FormControl.Label>\n                </Center>\n                <Input\n                    placeholder=\"Ex. 6477135354\"\n                    onChangeText={(value) => setData({ ...formData, name: value })}\n                />\n                <Center>\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>\n                        {t('helper')}\n                    </FormControl.HelperText>\n                </Center>\n                <FormControl.ErrorMessage _text={{fontSize: 'xs'}}>Error Name</FormControl.ErrorMessage>\n            </FormControl>\n            <Button onPress={onSubmit} mt=\"5\" isLoading={formData.submitted} isLoadingText=\"Submitting\">\n                {t('submit', { ns: 'common' })}\n            </Button>\n        </VStack>\n    );\n}\n"]},"metadata":{},"sourceType":"script"}