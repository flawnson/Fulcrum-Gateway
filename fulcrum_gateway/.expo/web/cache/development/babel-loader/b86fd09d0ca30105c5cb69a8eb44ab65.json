{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resources = exports.default = void 0;\n\nvar _i18next = _interopRequireDefault(require(\"i18next\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _i18nextBrowserLanguagedetector = _interopRequireDefault(require(\"i18next-browser-languagedetector\"));\n\nvar _translation = _interopRequireDefault(require(\"./src/assets/translations/en/translation.json\"));\n\nvar _translation2 = _interopRequireDefault(require(\"./src/assets/translations/fr/translation.json\"));\n\nvar resources = {\n  en: _translation.default,\n  fr: _translation2.default\n};\nexports.resources = resources;\n\n_i18next.default.use(_i18nextBrowserLanguagedetector.default).use(_reactI18next.initReactI18next).init({\n  resources: resources,\n  ns: ['common'],\n  defaultNS: 'common',\n  lng: 'en',\n  fallbackLng: 'en',\n  debug: true,\n  interpolation: {\n    escapeValue: false\n  },\n  keySeparator: false\n});\n\nvar _default = _i18next.default;\nexports.default = _default;","map":{"version":3,"sources":["/home/kshen3778/Desktop/Projects/Fulcrum-Gateway/fulcrum_gateway/i18n.ts"],"names":["resources","en","enTranslation","fr","frTranslation","i18n","use","LanguageDetector","initReactI18next","init","ns","defaultNS","lng","fallbackLng","debug","interpolation","escapeValue","keySeparator"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AAKO,IAAMA,SAAS,GAAG;AACrBC,EAAAA,EAAE,EAAEC,oBADiB;AAErBC,EAAAA,EAAE,EAAEC;AAFiB,CAAlB;;;AAKPC,iBAMKC,GANL,CAMSC,uCANT,EAQKD,GARL,CAQSE,8BART,EAWKC,IAXL,CAWU;AACFT,EAAAA,SAAS,EAATA,SADE;AAEFU,EAAAA,EAAE,EAAE,CAAC,QAAD,CAFF;AAGFC,EAAAA,SAAS,EAAE,QAHT;AAIFC,EAAAA,GAAG,EAAE,IAJH;AAKFC,EAAAA,WAAW,EAAE,IALX;AAMFC,EAAAA,KAAK,EAAE,IANL;AAOFC,EAAAA,aAAa,EAAE;AACXC,IAAAA,WAAW,EAAE;AADF,GAPb;AAUFC,EAAAA,YAAY,EAAE;AAVZ,CAXV;;eAwBeZ,gB","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport enTranslation from './src/assets/translations/en/translation.json'\nimport frTranslation from './src/assets/translations/fr/translation.json'\n// don't want to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\nexport const resources = {\n    en: enTranslation,\n    fr: frTranslation,\n}\n\ni18n\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n    // learn more: https://github.com/i18next/i18next-http-backend\n    // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n        resources,\n        ns: ['common'],\n        defaultNS: 'common',\n        lng: 'en',\n        fallbackLng: 'en',\n        debug: true,\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n        keySeparator: false,\n    });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"script"}