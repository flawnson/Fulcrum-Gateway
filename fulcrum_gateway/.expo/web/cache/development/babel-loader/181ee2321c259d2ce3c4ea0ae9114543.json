{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"react-native-gesture-handler\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _nativeStack = require(\"@react-navigation/native-stack\");\n\nvar _HomePage = _interopRequireDefault(require(\"./src/pages/HomePage\"));\n\nvar _SummonScreen = _interopRequireDefault(require(\"./src/screens/SummonScreen\"));\n\nvar _EndScreen = _interopRequireDefault(require(\"./src/screens/EndScreen\"));\n\nvar _ShareScreen = _interopRequireDefault(require(\"./src/screens/ShareScreen\"));\n\nvar _AbandonedScreen = _interopRequireDefault(require(\"./src/screens/AbandonedScreen\"));\n\nvar _QueuerDashboard = _interopRequireDefault(require(\"./src/pages/QueuerDashboard\"));\n\nvar _CreateQueuePage = _interopRequireDefault(require(\"./src/pages/CreateQueuePage\"));\n\nvar _LandingPage = _interopRequireDefault(require(\"./src/screens/LandingPage\"));\n\nvar _theme = require(\"./theme\");\n\nvar _expo = require(\"expo\");\n\nvar _ActiveQueuesPage = _interopRequireDefault(require(\"./src/pages/ActiveQueuesPage\"));\n\nvar _EnqueuedQueuersPage = _interopRequireDefault(require(\"./src/pages/EnqueuedQueuersPage\"));\n\nrequire(\"./i18n\");\n\nvar _OrganizerDashboardTabs = _interopRequireDefault(require(\"./src/pages/OrganizerDashboardTabs\"));\n\nvar _jsxFileName = \"/home/kshen3778/Desktop/Projects/Fulcrum-Gateway/fulcrum_gateway/App.tsx\";\nvar config = {\n  strictMode: 'error'\n};\n\nfunction App() {\n  var Stack = (0, _nativeStack.createNativeStackNavigator)();\n  var isInQueue = true;\n  var isQueuer = false;\n  var isOrganizer = true;\n  return _react.default.createElement(_nativeBase.NativeBaseProvider, {\n    config: config,\n    theme: (0, _theme.nativebaseTheme)(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_native.NavigationContainer, {\n    theme: (0, _theme.navigationTheme)(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(Stack.Navigator, {\n    initialRouteName: \"HomePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(Stack.Group, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, isInQueue && isQueuer ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(Stack.Screen, {\n    name: \"HomePage\",\n    component: _HomePage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 27\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"LandingPage\",\n    component: _LandingPage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 27\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"QueuerDashboard\",\n    component: _QueuerDashboard.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 27\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"AbandonedScreen\",\n    component: _AbandonedScreen.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"ShareScreen\",\n    component: _ShareScreen.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 27\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"SummonScreen\",\n    component: _SummonScreen.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }\n  })) : isInQueue && isOrganizer ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(Stack.Screen, {\n    name: \"HomePage\",\n    component: _OrganizerDashboardTabs.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"LandingPage\",\n    component: _LandingPage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"CreateQueuePage\",\n    component: _CreateQueuePage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"OrganizerDashboard\",\n    component: _OrganizerDashboardTabs.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"EnqueuedQueuersPage\",\n    component: _EnqueuedQueuersPage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"ActiveQueuesPage\",\n    component: _ActiveQueuesPage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"ShareScreen\",\n    component: _ShareScreen.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"EndScreen\",\n    component: _EndScreen.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 31\n    }\n  })) : _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(Stack.Screen, {\n    name: \"HomePage\",\n    component: _HomePage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"LandingPage\",\n    component: _LandingPage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"SignUp\",\n    component: _AbandonedScreen.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 31\n    }\n  }))))));\n}\n\nvar _default = App;\nexports.default = _default;\n(0, _expo.registerRootComponent)(App);","map":{"version":3,"sources":["/home/kshen3778/Desktop/Projects/Fulcrum-Gateway/fulcrum_gateway/App.tsx"],"names":["config","strictMode","App","Stack","isInQueue","isQueuer","isOrganizer","headerShown","HomePage","LandingPage","QueuerDashboard","AbandonedScreen","ShareScreen","SummonScreen","OrganizerDashboardTabs","CreateQueuePage","EnqueuedQueuersPage","ActiveQueuesPage","EndScreen"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React from 'react';\nimport { NativeBaseProvider } from 'native-base';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport HomePage from './src/pages/HomePage'\nimport SummonScreen from \"./src/screens/SummonScreen\";\nimport EndScreen from \"./src/screens/EndScreen\"\nimport ShareScreen from \"./src/screens/ShareScreen\"\nimport AbandonedScreen from \"./src/screens/AbandonedScreen\";\nimport QueuerDashboard from \"./src/pages/QueuerDashboard\";\nimport OrganizerDashboard from \"./src/pages/OrganizerDashboard\";\nimport CreateQueuePage from \"./src/pages/CreateQueuePage\";\nimport LandingPage from \"./src/screens/LandingPage\";\nimport {RootStackParamList} from \"./types\";\nimport {nativebaseTheme, navigationTheme} from \"./theme\";\nimport { registerRootComponent } from 'expo';\nimport ActiveQueuesPage from \"./src/pages/ActiveQueuesPage\";\nimport EnqueuedQueuersPage from \"./src/pages/EnqueuedQueuersPage\";\nimport './i18n';\nimport OrganizerDashboardTabs from \"./src/pages/OrganizerDashboardTabs\"\n\nconst config: object = {\n    strictMode: 'error',\n};\n\nfunction App() {\n    const Stack = createNativeStackNavigator<RootStackParamList>();\n    const isInQueue = true\n    const isQueuer = false\n    const isOrganizer = true\n\n    return (\n      <NativeBaseProvider config={config} theme={nativebaseTheme()}>\n          <NavigationContainer theme={navigationTheme()}>\n              <Stack.Navigator initialRouteName=\"HomePage\">\n                  <Stack.Group screenOptions={{ headerShown: false }} >\n                      {isInQueue && isQueuer ? (\n                      <>\n                          <Stack.Screen name=\"HomePage\" component={HomePage} />\n                          <Stack.Screen name=\"LandingPage\" component={LandingPage} />\n                          <Stack.Screen name=\"QueuerDashboard\" component={QueuerDashboard} />\n                          <Stack.Screen name=\"AbandonedScreen\" component={AbandonedScreen} />\n                          <Stack.Screen name=\"ShareScreen\" component={ShareScreen} />\n                          <Stack.Screen name=\"SummonScreen\" component={SummonScreen} />\n                      </>\n                      ) : isInQueue && isOrganizer ? (\n                          <>\n                              <Stack.Screen name=\"HomePage\" component={OrganizerDashboardTabs} />\n                              <Stack.Screen name=\"LandingPage\" component={LandingPage} />\n                              <Stack.Screen name=\"CreateQueuePage\" component={CreateQueuePage} />\n                              <Stack.Screen name=\"OrganizerDashboard\" component={OrganizerDashboardTabs} />\n                              <Stack.Screen name=\"EnqueuedQueuersPage\" component={EnqueuedQueuersPage} />\n                              <Stack.Screen name=\"ActiveQueuesPage\" component={ActiveQueuesPage} />\n                              <Stack.Screen name=\"ShareScreen\" component={ShareScreen} />\n                              <Stack.Screen name=\"EndScreen\" component={EndScreen} />\n                          </>\n                      ) : (\n                          <>\n                              <Stack.Screen name=\"HomePage\" component={HomePage} />\n                              <Stack.Screen name=\"LandingPage\" component={LandingPage} />\n                              <Stack.Screen name=\"SignUp\" component={AbandonedScreen} />\n                          </>\n                      )}\n                  </Stack.Group>\n              </Stack.Navigator>\n          </NavigationContainer>\n      </NativeBaseProvider>\n  );\n}\n\n\nexport default App\nregisterRootComponent(App)\n"]},"metadata":{},"sourceType":"script"}