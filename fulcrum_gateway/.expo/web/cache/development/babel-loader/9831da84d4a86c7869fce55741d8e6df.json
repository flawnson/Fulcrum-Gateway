{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nativebaseTheme = nativebaseTheme;\nexports.navigationTheme = navigationTheme;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _native = require(\"@react-navigation/native\");\n\nfunction nativebaseTheme() {\n  var _useColorMode = (0, _nativeBase.useColorMode)(),\n      colorMode = _useColorMode.colorMode;\n\n  var darkTheme = {\n    colors: {\n      primary: {\n        50: '#ffffff',\n        100: '#faf0ff',\n        200: '#eed2ff',\n        300: '#e1b4ff',\n        400: '#d296ff',\n        500: '#ca86ff',\n        600: '#c277ff',\n        700: '#b055ff',\n        800: '#9b2cff',\n        900: '#8f00ff'\n      },\n      amber: {\n        400: '#d97706'\n      }\n    },\n    config: {\n      initialColorMode: 'dark'\n    },\n    components: {\n      Button: {\n        baseStyle: {},\n        defaultProps: {\n          colorScheme: 'red'\n        },\n        variants: {},\n        sizes: {}\n      },\n      Input: {\n        defaultProps: {\n          placeholderTextColor: 'white',\n          borderColor: 'white'\n        }\n      }\n    }\n  };\n  var lightTheme = {\n    colors: {\n      primary: {\n        50: '#ffffff',\n        100: '#faf0ff',\n        200: '#eed2ff',\n        300: '#e1b4ff',\n        400: '#d296ff',\n        500: '#ca86ff',\n        600: '#c277ff',\n        700: '#b055ff',\n        800: '#9b2cff',\n        900: '#8f00ff'\n      },\n      amber: {\n        400: '#d97706'\n      }\n    },\n    config: {\n      initialColorMode: 'light'\n    },\n    components: {\n      Button: {\n        baseStyle: {},\n        defaultProps: {\n          colorScheme: 'green'\n        },\n        variants: {},\n        sizes: {}\n      }\n    }\n  };\n  return (0, _nativeBase.extendTheme)(colorMode === 'dark' ? darkTheme : lightTheme);\n}\n\nfunction navigationTheme() {\n  var _useColorMode2 = (0, _nativeBase.useColorMode)(),\n      colorMode = _useColorMode2.colorMode;\n\n  return (0, _extends2.default)({}, colorMode === 'dark' ? _native.DarkTheme : _native.DefaultTheme, {\n    colors: (0, _extends2.default)({}, colorMode === 'dark' ? _native.DarkTheme.colors : _native.DefaultTheme.colors, {\n      background: colorMode === 'dark' ? '#8743FF' : '#ffffff'\n    })\n  });\n}","map":{"version":3,"sources":["/home/kshen3778/Desktop/Projects/Fulcrum-Gateway/fulcrum_gateway/theme.tsx"],"names":["nativebaseTheme","colorMode","darkTheme","colors","primary","amber","config","initialColorMode","components","Button","baseStyle","defaultProps","colorScheme","variants","sizes","Input","placeholderTextColor","borderColor","lightTheme","navigationTheme","DarkTheme","DefaultTheme","background"],"mappings":";;;;;;;;;;AACA;;AACA;;AAGO,SAASA,eAAT,GAA4B;AAC/B,sBAAsB,+BAAtB;AAAA,MAAQC,SAAR,iBAAQA,SAAR;;AACA,MAAMC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE;AAEJC,MAAAA,OAAO,EAAE;AACL,YAAI,SADC;AAEL,aAAK,SAFA;AAGL,aAAK,SAHA;AAIL,aAAK,SAJA;AAKL,aAAK,SALA;AAML,aAAK,SANA;AAOL,aAAK,SAPA;AAQL,aAAK,SARA;AASL,aAAK,SATA;AAUL,aAAK;AAVA,OAFL;AAeJC,MAAAA,KAAK,EAAE;AACH,aAAK;AADF;AAfH,KADM;AAoBdC,IAAAA,MAAM,EAAE;AAEJC,MAAAA,gBAAgB,EAAE;AAFd,KApBM;AAwBdC,IAAAA,UAAU,EAAE;AACRC,MAAAA,MAAM,EAAE;AACJC,QAAAA,SAAS,EAAE,EADP;AAEJC,QAAAA,YAAY,EAAE;AACVC,UAAAA,WAAW,EAAE;AADH,SAFV;AAKJC,QAAAA,QAAQ,EAAE,EALN;AAMJC,QAAAA,KAAK,EAAE;AANH,OADA;AASRC,MAAAA,KAAK,EAAE;AACHJ,QAAAA,YAAY,EAAE;AACVK,UAAAA,oBAAoB,EAAE,OADZ;AAEVC,UAAAA,WAAW,EAAE;AAFH;AADX;AATC;AAxBE,GAAlB;AAyCA,MAAMC,UAAU,GAAG;AACff,IAAAA,MAAM,EAAE;AAEJC,MAAAA,OAAO,EAAE;AACL,YAAI,SADC;AAEL,aAAK,SAFA;AAGL,aAAK,SAHA;AAIL,aAAK,SAJA;AAKL,aAAK,SALA;AAML,aAAK,SANA;AAOL,aAAK,SAPA;AAQL,aAAK,SARA;AASL,aAAK,SATA;AAUL,aAAK;AAVA,OAFL;AAeJC,MAAAA,KAAK,EAAE;AACH,aAAK;AADF;AAfH,KADO;AAoBfC,IAAAA,MAAM,EAAE;AAEJC,MAAAA,gBAAgB,EAAE;AAFd,KApBO;AAwBfC,IAAAA,UAAU,EAAE;AACRC,MAAAA,MAAM,EAAE;AACJC,QAAAA,SAAS,EAAE,EADP;AAEJC,QAAAA,YAAY,EAAE;AACVC,UAAAA,WAAW,EAAE;AADH,SAFV;AAKJC,QAAAA,QAAQ,EAAE,EALN;AAMJC,QAAAA,KAAK,EAAE;AANH;AADA;AAxBG,GAAnB;AAoCA,SAAO,6BAAYb,SAAS,KAAK,MAAd,GAAuBC,SAAvB,GAAmCgB,UAA/C,CAAP;AACH;;AAEM,SAASC,eAAT,GAA4B;AAC/B,uBAAsB,+BAAtB;AAAA,MAAQlB,SAAR,kBAAQA,SAAR;;AACA,oCACQA,SAAS,KAAK,MAAd,GAAuBmB,iBAAvB,GAAmCC,oBAD3C;AAEIlB,IAAAA,MAAM,6BACEF,SAAS,KAAK,MAAd,GAAuBmB,kBAAUjB,MAAjC,GAA0CkB,qBAAalB,MADzD;AAEFmB,MAAAA,UAAU,EAAGrB,SAAS,KAAK,MAAd,GAAuB,SAAvB,GAAmC;AAF9C;AAFV;AAOH","sourcesContent":["import React from 'react'\nimport {extendTheme, useColorMode} from \"native-base\";\nimport {DarkTheme, DefaultTheme} from \"@react-navigation/native\";\nimport {useColorScheme} from \"react-native\";\n\nexport function nativebaseTheme () {\n    const { colorMode } = useColorMode();\n    const darkTheme = {\n        colors: {\n            // Add new color\n            primary: {\n                50: '#ffffff',\n                100: '#faf0ff',\n                200: '#eed2ff',\n                300: '#e1b4ff',\n                400: '#d296ff',\n                500: '#ca86ff',\n                600: '#c277ff',\n                700: '#b055ff',\n                800: '#9b2cff',\n                900: '#8f00ff',\n            },\n            // Redefinig only one shade, rest of the color will remain same.\n            amber: {\n                400: '#d97706',\n            },\n        },\n        config: {\n            // Changing initialColorMode to 'dark'\n            initialColorMode: 'dark',\n        },\n        components: {\n            Button: {\n                baseStyle: {},\n                defaultProps: {\n                    colorScheme: 'red',\n                },\n                variants: {},\n                sizes: {},\n            },\n            Input: {\n                defaultProps: {\n                    placeholderTextColor: 'white',\n                    borderColor: 'white',\n                }\n            }\n        },\n    }\n    const lightTheme = {\n        colors: {\n            // Add new color\n            primary: {\n                50: '#ffffff',\n                100: '#faf0ff',\n                200: '#eed2ff',\n                300: '#e1b4ff',\n                400: '#d296ff',\n                500: '#ca86ff',\n                600: '#c277ff',\n                700: '#b055ff',\n                800: '#9b2cff',\n                900: '#8f00ff',\n            },\n            // Redefinig only one shade, rest of the color will remain same.\n            amber: {\n                400: '#d97706',\n            },\n        },\n        config: {\n            // Changing initialColorMode to 'light'\n            initialColorMode: 'light',\n        },\n        components: {\n            Button: {\n                baseStyle: {},\n                defaultProps: {\n                    colorScheme: 'green',\n                },\n                variants: {},\n                sizes: {},\n            },\n        },\n    }\n\n    return extendTheme(colorMode === 'dark' ? darkTheme : lightTheme);\n}\n\nexport function navigationTheme () {  // https://reactnavigation.org/docs/themes/\n    const { colorMode } = useColorMode();\n    return ({\n        ...(colorMode === 'dark' ? DarkTheme : DefaultTheme),  // Should do useColorScheme() hook from react native\n        colors: {\n            ...(colorMode === 'dark' ? DarkTheme.colors : DefaultTheme.colors),\n            background: (colorMode === 'dark' ? '#8743FF' : '#ffffff'),\n        }\n    })\n}\n\n"]},"metadata":{},"sourceType":"script"}