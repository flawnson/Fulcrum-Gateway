{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nrequire(\"react-native-gesture-handler\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _nativeStack = require(\"@react-navigation/native-stack\");\n\nvar _HomePage = _interopRequireDefault(require(\"./src/pages/HomePage\"));\n\nvar _SummonScreen = _interopRequireDefault(require(\"./src/screens/SummonScreen\"));\n\nvar _EndScreen = _interopRequireDefault(require(\"./src/screens/EndScreen\"));\n\nvar _ShareScreen = _interopRequireDefault(require(\"./src/screens/ShareScreen\"));\n\nvar _AbandonedScreen = _interopRequireDefault(require(\"./src/screens/AbandonedScreen\"));\n\nvar _QueuerDashboard = _interopRequireDefault(require(\"./src/pages/QueuerDashboard\"));\n\nvar _CreateQueuePage = _interopRequireDefault(require(\"./src/pages/CreateQueuePage\"));\n\nvar _LandingPage = _interopRequireDefault(require(\"./src/screens/LandingPage\"));\n\nvar _theme = require(\"./theme\");\n\nvar _expo = require(\"expo\");\n\nvar _ActiveQueuesPage = _interopRequireDefault(require(\"./src/pages/ActiveQueuesPage\"));\n\nvar _EnqueuedQueuersPage = _interopRequireDefault(require(\"./src/pages/EnqueuedQueuersPage\"));\n\nrequire(\"./i18n\");\n\nvar _OrganizerDashboardTabs = _interopRequireDefault(require(\"./src/pages/OrganizerDashboardTabs\"));\n\nvar _useTheme = require(\"./src/utilities/useTheme\");\n\nvar _jsxFileName = \"/home/kshen3778/Desktop/Projects/Fulcrum-Gateway/fulcrum_gateway/App.tsx\";\nvar config = {\n  strictMode: 'error'\n};\n\nfunction App() {\n  var Stack = (0, _nativeStack.createNativeStackNavigator)();\n  var isInQueue = true;\n  var isQueuer = true;\n  var isOrganizer = false;\n\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isThemeDark = _React$useState2[0],\n      setIsThemeDark = _React$useState2[1];\n\n  var theme = isThemeDark ? {\n    nativebase: (0, _theme.nativebaseTheme)(\"dark\"),\n    navigation: (0, _theme.navigationTheme)(\"dark\")\n  } : {\n    nativebase: (0, _theme.nativebaseTheme)(\"light\"),\n    navigation: (0, _theme.navigationTheme)(\"light\")\n  };\n\n  var toggleTheme = _react.default.useCallback(function () {\n    return setIsThemeDark(!isThemeDark);\n  }, [isThemeDark]);\n\n  var preferences = _react.default.useMemo(function () {\n    return {\n      toggleTheme: toggleTheme,\n      isThemeDark: isThemeDark\n    };\n  }, [toggleTheme, isThemeDark]);\n\n  return _react.default.createElement(_useTheme.PreferencesContext.Provider, {\n    value: preferences,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_nativeBase.NativeBaseProvider, {\n    config: config,\n    theme: theme.nativebase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_native.NavigationContainer, {\n    theme: theme.navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(Stack.Navigator, {\n    initialRouteName: \"HomePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(Stack.Group, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }\n  }, isInQueue && isQueuer ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(Stack.Screen, {\n    name: \"HomePage\",\n    component: _CreateQueuePage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"LandingPage\",\n    component: _LandingPage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"QueuerDashboard\",\n    component: _QueuerDashboard.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"AbandonedScreen\",\n    component: _AbandonedScreen.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"ShareScreen\",\n    component: _ShareScreen.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"SummonScreen\",\n    component: _SummonScreen.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 31\n    }\n  })) : isInQueue && isOrganizer ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(Stack.Screen, {\n    name: \"HomePage\",\n    component: _OrganizerDashboardTabs.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 35\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"LandingPage\",\n    component: _LandingPage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 35\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"CreateQueuePage\",\n    component: _CreateQueuePage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 35\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"OrganizerDashboard\",\n    component: _OrganizerDashboardTabs.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 35\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"EnqueuedQueuersPage\",\n    component: _EnqueuedQueuersPage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 35\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"ActiveQueuesPage\",\n    component: _ActiveQueuesPage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 35\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"ShareScreen\",\n    component: _ShareScreen.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 35\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"EndScreen\",\n    component: _EndScreen.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 35\n    }\n  })) : _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(Stack.Screen, {\n    name: \"HomePage\",\n    component: _HomePage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 35\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"LandingPage\",\n    component: _LandingPage.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 35\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"SignUp\",\n    component: _AbandonedScreen.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 35\n    }\n  })))))));\n}\n\nvar _default = App;\nexports.default = _default;\n(0, _expo.registerRootComponent)(App);","map":{"version":3,"sources":["/home/kshen3778/Desktop/Projects/Fulcrum-Gateway/fulcrum_gateway/App.tsx"],"names":["config","strictMode","App","Stack","isInQueue","isQueuer","isOrganizer","React","useState","isThemeDark","setIsThemeDark","theme","nativebase","navigation","toggleTheme","useCallback","preferences","useMemo","headerShown","CreateQueuePage","LandingPage","QueuerDashboard","AbandonedScreen","ShareScreen","SummonScreen","OrganizerDashboardTabs","EnqueuedQueuersPage","ActiveQueuesPage","EndScreen","HomePage"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React from 'react';\nimport { NativeBaseProvider } from 'native-base';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport HomePage from './src/pages/HomePage'\nimport SummonScreen from \"./src/screens/SummonScreen\";\nimport EndScreen from \"./src/screens/EndScreen\"\nimport ShareScreen from \"./src/screens/ShareScreen\"\nimport AbandonedScreen from \"./src/screens/AbandonedScreen\";\nimport QueuerDashboard from \"./src/pages/QueuerDashboard\";\nimport CreateQueuePage from \"./src/pages/CreateQueuePage\";\nimport LandingPage from \"./src/screens/LandingPage\";\nimport {RootStackParamList} from \"./types\";\nimport {nativebaseTheme, navigationTheme} from \"./theme\";\nimport { registerRootComponent } from 'expo';\nimport ActiveQueuesPage from \"./src/pages/ActiveQueuesPage\";\nimport EnqueuedQueuersPage from \"./src/pages/EnqueuedQueuersPage\";\nimport './i18n';\nimport OrganizerDashboardTabs from \"./src/pages/OrganizerDashboardTabs\"\nimport {PreferencesContext} from \"./src/utilities/useTheme\";\n\nconst config: object = {\n    strictMode: 'error',\n};\n\nfunction App() {\n    const Stack = createNativeStackNavigator<RootStackParamList>();\n    const isInQueue = true\n    const isQueuer = true\n    const isOrganizer = false\n    const [isThemeDark, setIsThemeDark] = React.useState(false);\n\n    let theme = isThemeDark ? {nativebase: nativebaseTheme(\"dark\"), navigation: navigationTheme(\"dark\")} :\n                              {nativebase: nativebaseTheme(\"light\"), navigation: navigationTheme(\"light\")};\n\n    const toggleTheme = React.useCallback(() => {\n        return setIsThemeDark(!isThemeDark);\n    }, [isThemeDark]);\n\n    const preferences = React.useMemo(\n        () => ({\n            toggleTheme,\n            isThemeDark,\n        }),\n        [toggleTheme, isThemeDark]\n    );\n\n    return (\n        <PreferencesContext.Provider value={preferences}>\n          <NativeBaseProvider config={config} theme={theme.nativebase}>\n              <NavigationContainer theme={theme.navigation}>\n                  <Stack.Navigator initialRouteName=\"HomePage\">\n                      <Stack.Group screenOptions={{ headerShown: false }} >\n                          {isInQueue && isQueuer ? (\n                          <>\n                              <Stack.Screen name=\"HomePage\" component={CreateQueuePage} />\n                              <Stack.Screen name=\"LandingPage\" component={LandingPage} />\n                              <Stack.Screen name=\"QueuerDashboard\" component={QueuerDashboard} />\n                              <Stack.Screen name=\"AbandonedScreen\" component={AbandonedScreen} />\n                              <Stack.Screen name=\"ShareScreen\" component={ShareScreen} />\n                              <Stack.Screen name=\"SummonScreen\" component={SummonScreen} />\n                          </>\n                          ) : isInQueue && isOrganizer ? (\n                              <>\n                                  <Stack.Screen name=\"HomePage\" component={OrganizerDashboardTabs} />\n                                  <Stack.Screen name=\"LandingPage\" component={LandingPage} />\n                                  <Stack.Screen name=\"CreateQueuePage\" component={CreateQueuePage} />\n                                  <Stack.Screen name=\"OrganizerDashboard\" component={OrganizerDashboardTabs} />\n                                  <Stack.Screen name=\"EnqueuedQueuersPage\" component={EnqueuedQueuersPage} />\n                                  <Stack.Screen name=\"ActiveQueuesPage\" component={ActiveQueuesPage} />\n                                  <Stack.Screen name=\"ShareScreen\" component={ShareScreen} />\n                                  <Stack.Screen name=\"EndScreen\" component={EndScreen} />\n                              </>\n                          ) : (\n                              <>\n                                  <Stack.Screen name=\"HomePage\" component={HomePage} />\n                                  <Stack.Screen name=\"LandingPage\" component={LandingPage} />\n                                  <Stack.Screen name=\"SignUp\" component={AbandonedScreen} />\n                              </>\n                          )}\n                      </Stack.Group>\n                  </Stack.Navigator>\n              </NavigationContainer>\n          </NativeBaseProvider>\n        </PreferencesContext.Provider>\n\n    );\n}\n\n\nexport default App\nregisterRootComponent(App)\n"]},"metadata":{},"sourceType":"script"}