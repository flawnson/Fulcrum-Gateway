{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useInterval;\n\nvar _react = require(\"react\");\n\nfunction useInterval(callback, delay) {\n  var savedCallback = (0, _react.useRef)(callback);\n  (0, _react.useEffect)(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  (0, _react.useEffect)(function () {\n    if (delay === null) {\n      return;\n    }\n\n    var id = setInterval(function () {\n      return savedCallback.current();\n    }, delay);\n    return function () {\n      return clearInterval(id);\n    };\n  }, [delay]);\n}","map":{"version":3,"sources":["/home/kshen3778/Desktop/Projects/Fulcrum-Gateway/fulcrum_gateway/src/utilities/useInterval.tsx"],"names":["useInterval","callback","delay","savedCallback","current","id","setInterval","clearInterval"],"mappings":";;;;;AACA;;AAEe,SAASA,WAAT,CAAqBC,QAArB,EAA2CC,KAA3C,EAAiE;AAC5E,MAAMC,aAAa,GAAG,mBAAOF,QAAP,CAAtB;AAGA,wBAAU,YAAM;AACZE,IAAAA,aAAa,CAACC,OAAd,GAAwBH,QAAxB;AACH,GAFD,EAEG,CAACA,QAAD,CAFH;AAKA,wBAAU,YAAM;AAEZ,QAAIC,KAAK,KAAK,IAAd,EAAoB;AAChB;AACH;;AAED,QAAMG,EAAE,GAAGC,WAAW,CAAC;AAAA,aAAMH,aAAa,CAACC,OAAd,EAAN;AAAA,KAAD,EAAgCF,KAAhC,CAAtB;AAEA,WAAO;AAAA,aAAMK,aAAa,CAACF,EAAD,CAAnB;AAAA,KAAP;AACH,GATD,EASG,CAACH,KAAD,CATH;AAUH","sourcesContent":["/* Courtesy of useHooks.ts and their wonderful collection of typescript hooks */\nimport { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: number | null) {\n    const savedCallback = useRef(callback)\n\n    // Remember the latest callback if it changes.\n    useEffect(() => {\n        savedCallback.current = callback\n    }, [callback])\n\n    // Set up the interval.\n    useEffect(() => {\n        // Don't schedule if no delay is specified.\n        if (delay === null) {\n            return\n        }\n\n        const id = setInterval(() => savedCallback.current(), delay)\n\n        return () => clearInterval(id)\n    }, [delay])\n}\n\n"]},"metadata":{},"sourceType":"script"}