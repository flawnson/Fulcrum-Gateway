{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = OrganizerDashboardTabs;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bottomTabs = require(\"@react-navigation/bottom-tabs\");\n\nvar _OrganizerDashboard = _interopRequireDefault(require(\"./OrganizerDashboard\"));\n\nvar _EnqueuedQueuersPage = _interopRequireDefault(require(\"./EnqueuedQueuersPage\"));\n\nvar _AbandonedScreen = _interopRequireDefault(require(\"../screens/AbandonedScreen\"));\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _jsxFileName = \"/home/kshen3778/Desktop/Projects/Fulcrum-Gateway/fulcrum_gateway/src/pages/OrganizerDashboardTabs.tsx\";\nvar Tab = (0, _bottomTabs.createBottomTabNavigator)();\n\nfunction OrganizerDashboardTabs() {\n  var _this = this;\n\n  return _react.default.createElement(Tab.Navigator, {\n    initialRouteName: \"OrganizerDashboard\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'OrganizerDashboard') {\n            iconName = focused ? 'view-dashboard' : 'view-dashboard-outline';\n          } else if (route.name === 'Enqueued') {\n            iconName = focused ? 'account-clock' : 'account-clock-outline';\n          } else if (route.name === 'Serviced') {\n            iconName = focused ? 'account-check' : 'account-check-outline';\n          } else if (route.name === 'Abandoned') {\n            iconName = focused ? 'undo-variant' : 'undo-variant';\n          }\n\n          return _react.default.createElement(_vectorIcons.MaterialCommunityIcons, {\n            name: iconName,\n            size: 32,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 28\n            }\n          });\n        },\n        tabBarActiveTintColor: '#8743FF',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Tab.Screen, {\n    name: \"OrganizerDashboard\",\n    component: _OrganizerDashboard.default,\n    options: {\n      tabBarLabel: 'Dashboard'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Enqueued\",\n    component: _EnqueuedQueuersPage.default,\n    options: {\n      tabBarLabel: 'Enqueued'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Serviced\",\n    component: _AbandonedScreen.default,\n    options: {\n      tabBarLabel: 'Serviced'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Abandoned\",\n    component: _AbandonedScreen.default,\n    options: {\n      tabBarLabel: 'Abandoned'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/kshen3778/Desktop/Projects/Fulcrum-Gateway/fulcrum_gateway/src/pages/OrganizerDashboardTabs.tsx"],"names":["Tab","OrganizerDashboardTabs","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","OrganizerDashboard","tabBarLabel","EnqueuedQueuersPage","AbandonedScreen"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,IAAMA,GAAG,GAAG,2CAAZ;;AAEe,SAASC,sBAAT,GAAkC;AAAA;;AAC7C,SACI,6BAAC,GAAD,CAAK,SAAL;AACI,IAAA,gBAAgB,EAAC,oBADrB;AAEI,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC3BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACtC,cAAIC,QAAJ;;AAEA,cAAIL,KAAK,CAACM,IAAN,KAAe,oBAAnB,EAAyC;AACrCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,gBAAH,GAAsB,wBAAxC;AACH,WAFD,MAEO,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AAClCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,eAAH,GAAqB,uBAAvC;AACH,WAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AAClCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,eAAH,GAAqB,uBAAvC;AACH,WAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,WAAnB,EAAgC;AACnCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,cAAH,GAAoB,cAAtC;AACH;;AAGD,iBAAO,6BAAC,mCAAD;AAAwB,YAAA,IAAI,EAAEG,QAA9B;AAAwC,YAAA,IAAI,EAAE,EAA9C;AAAkD,YAAA,KAAK,EAAEF,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,SAhB0B;AAiB3BI,QAAAA,qBAAqB,EAAE,SAjBI;AAkB3BC,QAAAA,uBAAuB,EAAE;AAlBE,OAAhB;AAAA,KAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAuBI,6BAAC,GAAD,CAAK,MAAL;AACI,IAAA,IAAI,EAAC,oBADT;AAEI,IAAA,SAAS,EAAEC,2BAFf;AAGI,IAAA,OAAO,EAAE;AACLC,MAAAA,WAAW,EAAE;AADR,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,EA8BI,6BAAC,GAAD,CAAK,MAAL;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAEC,4BAFf;AAGI,IAAA,OAAO,EAAE;AACLD,MAAAA,WAAW,EAAE;AADR,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,EAqCI,6BAAC,GAAD,CAAK,MAAL;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAEE,wBAFf;AAGI,IAAA,OAAO,EAAE;AACLF,MAAAA,WAAW,EAAE;AADR,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCJ,EA4CI,6BAAC,GAAD,CAAK,MAAL;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,SAAS,EAAEE,wBAFf;AAGI,IAAA,OAAO,EAAE;AACLF,MAAAA,WAAW,EAAE;AADR,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CJ,CADJ;AAsDH","sourcesContent":["import React from 'react'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport OrganizerDashboard from \"./OrganizerDashboard\";\nimport EnqueuedQueuersPage from \"./EnqueuedQueuersPage\";\nimport AbandonedScreen from \"../screens/AbandonedScreen\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function OrganizerDashboardTabs() {\n    return (\n        <Tab.Navigator\n            initialRouteName=\"OrganizerDashboard\"\n            screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, color, size }) => {\n                    let iconName;\n\n                    if (route.name === 'OrganizerDashboard') {\n                        iconName = focused ? 'view-dashboard' : 'view-dashboard-outline';\n                    } else if (route.name === 'Enqueued') {\n                        iconName = focused ? 'account-clock' : 'account-clock-outline';\n                    } else if (route.name === 'Serviced') {\n                        iconName = focused ? 'account-check' : 'account-check-outline';\n                    } else if (route.name === 'Abandoned') {\n                        iconName = focused ? 'undo-variant' : 'undo-variant';\n                    }\n\n                    // @ts-ignore for some reason the name has trouble with the type of iconName\n                    return <MaterialCommunityIcons name={iconName} size={32} color={color} />\n                },\n                tabBarActiveTintColor: '#8743FF',\n                tabBarInactiveTintColor: 'gray',\n            })}\n        >\n            <Tab.Screen\n                name=\"OrganizerDashboard\"\n                component={OrganizerDashboard}\n                options={{\n                    tabBarLabel: 'Dashboard',\n                }}\n            />\n            <Tab.Screen\n                name=\"Enqueued\"\n                component={EnqueuedQueuersPage}\n                options={{\n                    tabBarLabel: 'Enqueued',\n                }}\n            />\n            <Tab.Screen\n                name=\"Serviced\"\n                component={AbandonedScreen}\n                options={{\n                    tabBarLabel: 'Serviced',\n                }}\n            />\n            <Tab.Screen\n                name=\"Abandoned\"\n                component={AbandonedScreen}\n                options={{\n                    tabBarLabel: 'Abandoned',\n                }}\n            />\n        </Tab.Navigator>\n    );\n}\n"]},"metadata":{},"sourceType":"script"}